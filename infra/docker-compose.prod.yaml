version: '3.9'

services:
  # ═══════════════════════════════════════════════════════════
  # Redis - In-memory cache & pub/sub for notifications
  # ═══════════════════════════════════════════════════════════
  redis:
    image: redis:7-alpine
    container_name: unicorn-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis-data:/data
    networks:
      - unicorn-net
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ═══════════════════════════════════════════════════════════
  # App - Main FastAPI application
  # ═══════════════════════════════════════════════════════════
  app:
    image: ${DOCKER_IMAGE:-oferikog/unicorn-app:latest}
    container_name: unicorn-app
    restart: unless-stopped
    env_file:
      - .env.prod
    environment:
      - REDIS_URL=redis://redis:6379/0
      - ENVIRONMENT=production
      - MAX_TRIES=60
      - WAIT_SECONDS=1
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - unicorn-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s  # Increased for prestart script
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ═══════════════════════════════════════════════════════════
  # Worker - Background notification processor
  # ═══════════════════════════════════════════════════════════
  worker:
    image: ${DOCKER_IMAGE:-oferikog/unicorn-app:latest}
    container_name: unicorn-worker
    restart: unless-stopped
    command: python -m app.worker.notification_worker
    env_file:
      - .env.prod
    environment:
      - REDIS_URL=redis://redis:6379/0
      - ENVIRONMENT=production
    depends_on:
      redis:
        condition: service_healthy
      app:
        condition: service_healthy
    networks:
      - unicorn-net
    healthcheck:
      test: ["CMD", "python", "-c", "import redis; r=redis.Redis(host='redis'); r.ping()"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ═══════════════════════════════════════════════════════════
  # Nginx - Reverse proxy with SSL termination
  # ═══════════════════════════════════════════════════════════
  nginx:
    image: nginx:alpine
    container_name: unicorn-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ~/ssl:/etc/nginx/ssl:ro
    depends_on:
      app:
        condition: service_healthy
    networks:
      - unicorn-net
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:80/health"]
      interval: 10s
      timeout: 5s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  unicorn-net:
    name: unicorn-net
    driver: bridge

volumes:
  redis-data:
    name: unicorn-redis-data
