name: CI

on:
  pull_request:
  push:
    branches: [main]

jobs:
  backend:
    runs-on: ubuntu-latest
    defaults: { run: { working-directory: apps/api } }

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: unicorn_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U test"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      DB_USER: test
      DB_PASS: test
      DB_HOST: localhost
      DB_PORT: 5432
      DB_NAME: testdb
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: Install Poetry
        run: pip install poetry
      - name: Install deps (main + dev)
        run: poetry install --with dev
      - name: Lint (Ruff)
        run: poetry run ruff check .
      - name: Type-check
        run: poetry run mypy app
      - name: Tests
        run: poetry run pytest
        env:
          DB_HOST: localhost
          DB_PORT: 5432
          DB_USER: test
          DB_PASS: test
          DB_NAME: unicorn_test

  frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9.1.1

      - name: Install deps
        working-directory: ./apps/web
        run: pnpm install

      - name: Format check
        working-directory: ./apps/web
        run: pnpm lint:check

      - name: Build
        working-directory: ./apps/web
        run: pnpm build

      - name: Tests
        working-directory: ./apps/web
        run: pnpm test
