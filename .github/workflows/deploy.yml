name: Deploy Backend & Frontend

on:
  push:
    branches: [main]

env:
  DOCKER_IMAGE: oferikog/unicorn-app:latest
  FRONTEND_DIR: apps/web
  BACKEND_DIR: apps/api
  VITE_API_URL: https://api.myunicorn.pw

jobs:
  backend:
    name: Deploy Backend to EC2
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push Docker image
        run: |
          docker buildx build \
            --platform linux/arm64,linux/amd64 \
            -t $DOCKER_IMAGE \
            --push \
            -f $BACKEND_DIR/Dockerfile .

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            DOCKER_IMAGE=oferikog/unicorn-app:latest
            docker stop app || true && docker rm app || true
            docker pull $DOCKER_IMAGE
            export DATABASE_URL=$(aws ssm get-parameter \
              --name /app/unicorn/db-url \
              --with-decryption \
              --query Parameter.Value \
              --output text)
            docker run -d --name app \
              --restart unless-stopped \
              -e DATABASE_URL="$DATABASE_URL" \
              -p 8000:8000 \
              $DOCKER_IMAGE

  frontend:
    name: Deploy Frontend to Cloudflare Pages
    runs-on: ubuntu-latest
    needs: backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install pnpm
        run: npm install -g pnpm@9

      - name: Install deps (pnpm)
        working-directory: ${{ env.FRONTEND_DIR }}
        run: pnpm install --frozen-lockfile

      - name: Prepare production env
        working-directory: ${{ env.FRONTEND_DIR }}
        run: |
          echo "VITE_API_URL=${{ env.VITE_API_URL }}" > .env.production

      - name: Build frontend
        working-directory: ${{ env.FRONTEND_DIR }}
        run: pnpm run build

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: unicorn-frontend
          directory: ${{ env.FRONTEND_DIR }}/build
          branch: main
